# Docker Parser Validation Test Cases - Language Package Managers
# Tests for pip, npm, yarn, gem, etc. within Dockerfiles

test_cases:
  - name: "pip with version constraints"
    description: "Python package installation with various version specifiers"
    input: |
      FROM python:3.9
      RUN pip install \
          django==3.2.0 \
          requests>=2.25.0,<3.0.0 \
          numpy~=1.21.0 \
          pandas
    expected_packages:
      - name: "python"
        version: "3.9"
        ecosystem: "docker"
      - name: "django"
        version: "3.2.0"
        ecosystem: "pypi"
      - name: "requests"
        version: "2.25.0"
        ecosystem: "pypi"
      - name: "numpy"
        version: "1.21.0"
        ecosystem: "pypi"
      - name: "pandas"
        version: "latest"
        ecosystem: "pypi"

  - name: "npm packages with scopes"
    description: "Node.js packages including scoped packages"
    input: |
      FROM node:16-alpine
      RUN npm install \
          express@4.17.1 \
          @angular/core@12.0.0 \
          react react-dom \
          typescript -g
    expected_packages:
      - name: "node"
        version: "16-alpine"
        ecosystem: "docker"
      - name: "express"
        version: "4.17.1"
        ecosystem: "npm"
      - name: "@angular/core"
        version: "12.0.0"
        ecosystem: "npm"
      - name: "react"
        version: "latest"
        ecosystem: "npm"
      - name: "react-dom"
        version: "latest"
        ecosystem: "npm"
      - name: "typescript"
        version: "latest"
        ecosystem: "npm"

  - name: "yarn packages"
    description: "Yarn package manager usage"
    input: |
      FROM node:14
      RUN npm install -g yarn
      RUN yarn add lodash@4.17.21 moment webpack
    expected_packages:
      - name: "node"
        version: "14"
        ecosystem: "docker"
      - name: "yarn"
        version: "latest"
        ecosystem: "npm"
      - name: "lodash"
        version: "4.17.21"
        ecosystem: "npm"
      - name: "moment"
        version: "latest"
        ecosystem: "npm"
      - name: "webpack"
        version: "latest"
        ecosystem: "npm"

  - name: "pip with extras"
    description: "Python packages with extras should be parsed correctly"
    input: |
      FROM python:3.8-slim
      RUN pip install \
          celery[redis]==5.1.2 \
          django[argon2] \
          requests[security,socks]
    expected_packages:
      - name: "python"
        version: "3.8-slim"
        ecosystem: "docker"
      - name: "celery"
        version: "5.1.2"
        ecosystem: "pypi"
      - name: "django"
        version: "latest"
        ecosystem: "pypi"
      - name: "requests"
        version: "latest"
        ecosystem: "pypi"

  - name: "Requirements file reference"
    description: "pip install from requirements file should be skipped"
    input: |
      FROM python:3.9
      COPY requirements.txt .
      RUN pip install -r requirements.txt
      RUN pip install gunicorn==20.1.0
    expected_packages:
      - name: "python"
        version: "3.9"
        ecosystem: "docker"
      - name: "gunicorn"
        version: "20.1.0"
        ecosystem: "pypi"
    validation_notes: "Requirements file install should be skipped"

  - name: "Multiple pip variants"
    description: "Different ways to invoke pip"
    input: |
      FROM ubuntu:20.04
      RUN apt-get update && apt-get install -y python3 python3-pip
      RUN pip3 install flask==2.0.1
      RUN python3 -m pip install sqlalchemy>=1.4.0
      RUN /usr/bin/pip install alembic
    expected_packages:
      - name: "ubuntu"
        version: "20.04"
        ecosystem: "docker"
      - name: "python3"
        version: "latest"
        ecosystem: "debian"
      - name: "python3-pip"
        version: "latest"
        ecosystem: "debian"
      - name: "flask"
        version: "2.0.1"
        ecosystem: "pypi"
      - name: "sqlalchemy"
        version: "1.4.0"
        ecosystem: "pypi"
      - name: "alembic"
        version: "latest"
        ecosystem: "pypi"